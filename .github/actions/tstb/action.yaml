name: "Test Version"
description: "Build the QAX program (pyinstaller and inno setup)"

inputs:
  env-name:
    description: "Name for Conda environment"
    required: true
    default: "build-qax"

# https://docs.github.com/en/actions/creating-actions/creating-a-composite-action
outputs:
  version:
    description: "QAX build verion id"
    value: ${{ steps.qax-version.outputs.version }}

runs:
  using: "composite"
  steps:
    - name: Install QAX
      shell: bash -l {0}
      run: |
        conda info --envs
        conda activate ~/miniconda/envs/${{ inputs.env-name }}
        conda info --envs
        which pip
        pip install .

    - id: qax-verision
      name: QAX Version
      shell: bash -l {0}
      run: |
        conda activate ~/miniconda/envs/${{ inputs.env-name }}
        echo "version=$(python -m setuptools_scm)" >> "$GITHUB_OUTPUT"
        python -m setuptools_scm
        echo "$version"
        echo "$GITHUB_OUTPUT"
        # echo "VERSION=$(python -m setuptools_scm)" >> $GITHUB_ENV

    # yes we could have a separate job, specificially a sphinx build action
    # and then upload the artifact and then download it within the win-builder.
    # However, for a distributable build, it makes more sense to build everything
    # from the same environment rather than separate jobs to ensure consistency.
    # - name: Docs-build
    #   shell: bash -l {0}
    #   run: |
    #     conda activate ~/miniconda/envs/${{ inputs.env-name }}
    #     conda info --envs
    #     sphinx-build -b html docs docs/_build/html

    # - name: Pyinstaller
    #   shell: bash -l {0}
    #   run: |
    #     conda activate ~/miniconda/envs/${{ inputs.env-name }}
    #     conda info --envs
    #     pyinstaller install/cli.spec

    # - name: Zip container
    #   shell: bash -l {0}
    #   run: |
    #     conda activate ~/miniconda/envs/${{ inputs.env-name }}
    #     # tarballs may cause user questions to come back
    #     # will switch to 7z later
    #     tar -czf "qax_dist_${{ env.VERSION }}.tar.gz" dist/qax
    #     # zip -r "qax_dist_${{ env.VERSION }}.zip" dist/
    #     # 7z "qax_dist_${{ env.VERSION }}.zip" dist/

    # - name: Run inno setup
    #   shell: bash -l {0}
    #   run: |
    #     conda activate ~/miniconda/envs/${{ inputs.env-name }}
    #     ISCC install/qax.iss
